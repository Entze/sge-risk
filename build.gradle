plugins {
    id 'java'
    id 'idea'
    id "maven-publish"
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'at.ac.tuwien.ifs.sge'
version = '1.0.5'

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation("org.jgrapht:jgrapht-core:1.5.2")
    implementation("org.yaml:snakeyaml:1.29")
    implementation("com.google.guava:guava:33.4.0-jre")
    implementation("info.picocli:picocli:4.7.0")
    implementation("com.gitlab.StrategyGameEngine:strategy-game-engine:v1.0.7")
    testImplementation("junit:junit:4.13.2")
    testImplementation("com.pholser:junit-quickcheck-core:1.0")
    testImplementation("com.pholser:junit-quickcheck-generators:1.0")
}


jar {
    manifest {
        attributes("Sge-Type": "game",
                "Game-Class": "at.ac.tuwien.ifs.sge.game.risk.board.Risk",
                "Main-Class": "at.ac.tuwien.ifs.sge.engine.risk.RiskMapGenerator")
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    archiveClassifier.set('exe')
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
}


tasks.register('generateVersionsYaml') {
    description = 'Generate versions.yaml file with project metadata'
    group = 'Documentation'

    doLast {
        def versionsFile = file('manual/versions.yaml')
        versionsFile.parentFile.mkdirs()

        // Extract the SGE_VERSION dependency version
        def sgeVersion = ""
        configurations.compileClasspath.dependencies.each { dependency ->
            if (dependency.group == "com.gitlab.StrategyGameEngine" && dependency.name == "strategy-game-engine") {
                sgeVersion = dependency.version
            }
        }

        // If the dependency wasn't found in compileClasspath, check implementation configuration
        if (sgeVersion.isEmpty()) {
            configurations.implementation.dependencies.each { dependency ->
                if (dependency.group == "com.gitlab.StrategyGameEngine" && dependency.name == "strategy-game-engine") {
                    sgeVersion = dependency.version
                }
            }
        }

        if (sgeVersion.startsWith("v")) {
            sgeVersion = sgeVersion.substring(1)
        }

        def yaml = """
# Automatically generated from Gradle properties
SGE_VERSION: ${sgeVersion ?: "not-found"}
JAVA_VERSION: ${project.sourceCompatibility}
SGE_RISK_VERSION: ${project.version} 
""".trim()

        versionsFile.text = yaml
        println "Generated ${versionsFile.absolutePath}"
    }
}
